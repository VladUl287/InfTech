// <auto-generated />
using System;
using InfTech.Infrastracture.Database;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace InfTech.Infrastracture.Database.Migrations
{
    [DbContext(typeof(DatabaseContext))]
    partial class DatabaseContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("InfTech.Core.Entities.Extension", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Icon")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("character varying(64)");

                    b.HasKey("Id");

                    b.HasIndex("Type")
                        .IsUnique();

                    b.ToTable("Extensions");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Icon = "<i class=\"bi bi-file-earmark\"></i>",
                            Type = ""
                        },
                        new
                        {
                            Id = 2,
                            Icon = "<i class=\"bi bi-filetype-html\"></i>",
                            Type = ".html"
                        },
                        new
                        {
                            Id = 3,
                            Icon = "<i class=\"bi bi-filetype-xml\"></i>",
                            Type = ".xaml"
                        },
                        new
                        {
                            Id = 4,
                            Icon = "<i class=\"bi bi-filetype-cs\"></i>",
                            Type = ".cs"
                        });
                });

            modelBuilder.Entity("InfTech.Core.Entities.FileEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("ExtensionId")
                        .HasColumnType("integer");

                    b.Property<int?>("FolderId")
                        .HasColumnType("integer");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)");

                    b.HasKey("Id");

                    b.HasIndex("ExtensionId");

                    b.HasIndex("FolderId");

                    b.ToTable("Files");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Content = "<html>\n<body>\n   test\n</body\n</html>\n",
                            Description = "Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s",
                            ExtensionId = 2,
                            FolderId = 1,
                            Name = "MainWindow"
                        },
                        new
                        {
                            Id = 2,
                            Content = "<StackPanel>\r\n    <Button Content=\"Click Me\"/>\r\n</StackPanel>",
                            Description = "It has roots in a piece of classical Latin literature from 45",
                            ExtensionId = 4,
                            Name = "App"
                        });
                });

            modelBuilder.Entity("InfTech.Core.Entities.Folder", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)");

                    b.Property<int?>("ParentFolderId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("ParentFolderId");

                    b.ToTable("Folders");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Resources"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Content",
                            ParentFolderId = 1
                        },
                        new
                        {
                            Id = 3,
                            Name = "bin"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Debug",
                            ParentFolderId = 3
                        });
                });

            modelBuilder.Entity("InfTech.Core.Entities.FileEntity", b =>
                {
                    b.HasOne("InfTech.Core.Entities.Extension", "Extension")
                        .WithMany("Files")
                        .HasForeignKey("ExtensionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("InfTech.Core.Entities.Folder", "Folder")
                        .WithMany("Files")
                        .HasForeignKey("FolderId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.Navigation("Extension");

                    b.Navigation("Folder");
                });

            modelBuilder.Entity("InfTech.Core.Entities.Folder", b =>
                {
                    b.HasOne("InfTech.Core.Entities.Folder", "ParentFolder")
                        .WithMany("Folders")
                        .HasForeignKey("ParentFolderId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.Navigation("ParentFolder");
                });

            modelBuilder.Entity("InfTech.Core.Entities.Extension", b =>
                {
                    b.Navigation("Files");
                });

            modelBuilder.Entity("InfTech.Core.Entities.Folder", b =>
                {
                    b.Navigation("Files");

                    b.Navigation("Folders");
                });
#pragma warning restore 612, 618
        }
    }
}
